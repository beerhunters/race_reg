"""
–£–ø—Ä–æ—â—ë–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:
1. /start -> –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ pending_registrations
2. –í–≤–æ–¥ –∏–º–µ–Ω–∏
3. –í—ã–±–æ—Ä —Ä–æ–ª–∏ (—Ç–æ–ª—å–∫–æ –±–µ–≥—É–Ω)
4. –í–≤–æ–¥ —Ü–µ–ª–µ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
5. –í—ã–±–æ—Ä –ø–æ–ª–∞
6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ—Ç–æ–≤: –ª–∏–±–æ —É—á–∞—Å—Ç–Ω–∏–∫–∏, –ª–∏–±–æ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞–Ω–∏—è
7. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
"""

import os
from datetime import datetime
from pytz import timezone
from aiogram import Dispatcher, Bot, F
from aiogram.filters import CommandStart, StateFilter
from aiogram.types import (
    Message,
    CallbackQuery,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    FSInputFile,
)
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest, TelegramForbiddenError

from logging_config import get_logger, log
from .utils import (
    create_main_menu_keyboard,
    messages,
    RegistrationForm,
    config,
    create_gender_keyboard,
    get_participation_fee_text,
    get_event_date_text,
    get_event_location_text,
    get_event_time_text,
)

logger = get_logger(__name__)
from .validation import validate_name, validate_time_format, sanitize_input
from database import (
    get_participant_by_user_id,
    add_pending_registration,
    add_participant,
    get_participant_count_by_role,
    get_setting,
    delete_pending_registration,
    add_to_waitlist,
    is_user_in_waitlist,
    is_current_event_active,
    get_waitlist_position,
    get_waitlist_by_user_id,
    count_complete_teams,
)


def create_runner_only_keyboard():
    """–°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –æ–ø—Ü–∏–µ–π –±–µ–≥—É–Ω–∞"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üèÉ –ë–µ–≥—É–Ω", callback_data="role_runner")],
        ]
    )
    return keyboard


def create_start_registration_keyboard():
    """–°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    # Check if team mode is enabled
    team_mode_enabled = get_setting("team_mode_enabled")
    team_mode_enabled = int(team_mode_enabled) if team_mode_enabled is not None else 1

    buttons = [
        [
            InlineKeyboardButton(
                text="üèÉ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –±–µ–≥—É–Ω",
                callback_data="start_registration",
            )
        ]
    ]

    # Add team registration button only if team mode is enabled
    if team_mode_enabled == 1:
        buttons.append([
            InlineKeyboardButton(
                text="üë• –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –∫–æ–º–∞–Ω–¥–∞",
                callback_data="start_team_registration",
            )
        ])

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


async def handle_start_command(
    message: Message, state: FSMContext, bot: Bot, admin_id: int
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –±–æ—Ç–æ–º
    if message.from_user.is_bot:
        logger.warning(
            f"–ü–æ–ø—ã—Ç–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º: {message.from_user.id} (@{message.from_user.username})"
        )
        return

    user_id = message.from_user.id
    log.command_received("/start", user_id, message.from_user.username)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start
    if message.text and len(message.text.split()) > 1:
        referral_code = message.text.split()[1]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –ø–µ—Ä–µ–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Å–ª–æ—Ç–∞
        if referral_code.startswith("team_"):
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –∫–æ–º–∞–Ω–¥—ã
            await handle_team_referral_start(message, referral_code, bot, admin_id, state)
            return
        else:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ (–ø–µ—Ä–µ–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–∞)
            from .slot_transfer_handlers import handle_referral_start
            await handle_referral_start(message, referral_code, bot, admin_id, state)
            return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user_id == admin_id:
        log.admin_action("start_command_accessed", user_id)
        try:
            from .utils import create_admin_commands_keyboard

            await message.answer(
                messages["admin_commands"],
                reply_markup=create_admin_commands_keyboard(),
            )
        except Exception as e:
            log.notification_sent("admin_commands", user_id, False, str(e))
            await message.answer("üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
        await state.clear()
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏—è (–¥–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ reg_end_date)
    if not is_current_event_active():
        await message.answer(
            "‚ö†Ô∏è <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø–æ–∫–∞ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞</b>\n\n"
            "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!",
            reply_markup=create_main_menu_keyboard()
        )
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    reg_end_date = get_setting("reg_end_date")
    if reg_end_date:
        try:
            end_date = datetime.strptime(reg_end_date, "%H:%M %d.%m.%Y")
            moscow_tz = timezone("Europe/Moscow")
            end_date = moscow_tz.localize(end_date)
            current_time = datetime.now(moscow_tz)
            if current_time > end_date:
                afisha_path = "/app/images/afisha.jpeg"
                try:
                    if os.path.exists(afisha_path):
                        await bot.send_photo(
                            chat_id=message.from_user.id,
                            photo=FSInputFile(afisha_path),
                            caption=messages["registration_closed"],
                            parse_mode="HTML",
                        )
                        logger.info(
                            f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫—Ä—ã—Ç–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –∞—Ñ–∏—à–µ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ user_id={message.from_user.id}"
                        )
                    else:
                        await message.answer(messages["registration_closed"])
                        logger.info(
                            f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫—Ä—ã—Ç–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–±–µ–∑ –∞—Ñ–∏—à–∏) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ user_id={message.from_user.id}"
                        )
                except Exception as e:
                    logger.error(
                        f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–∫—Ä—ã—Ç–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}"
                    )
                    await message.answer(messages["registration_closed"])
                return
        except ValueError:
            logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç reg_end_date: {reg_end_date}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    from .archive_handlers import handle_historical_participant

    # –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∏—Å—Ç–æ—Ä–∏—é
    if not is_current_event_active():
        historical_handled = await handle_historical_participant(user_id, message)
        if historical_handled:
            return
    else:
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ç–µ–∫—É—â–∏–π —É—á–∞—Å—Ç–Ω–∏–∫,
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        participant = get_participant_by_user_id(user_id)
        if not participant and not is_user_in_waitlist(user_id):
            historical_handled = await handle_historical_participant(user_id, message)
            if historical_handled:
                return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    participant = get_participant_by_user_id(user_id)
    if participant:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        name = participant[2]
        target_time = participant[3] or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
        role = "–±–µ–≥—É–Ω" if participant[4] == "runner" else "–≤–æ–ª–æ–Ω—Ç—ë—Ä"
        bib_number = f"‚Ññ {participant[7]}" if participant[7] else "–Ω–µ –ø—Ä–∏—Å–≤–æ–µ–Ω"
        payment_status = participant[6]
        gender = (
            "–º—É–∂—Å–∫–æ–π"
            if participant[9] == "male"
            else "–∂–µ–Ω—Å–∫–∏–π" if participant[9] == "female" else "–Ω–µ —É–∫–∞–∑–∞–Ω"
        )
        # –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å —ç–º–æ–¥–∑–∏
        if participant[10]:
            category_emoji = {
                "–°—É–ø–µ—Ä–≠–ª–∏—Ç–∞": "üíé",
                "–≠–ª–∏—Ç–∞": "ü•á",
                "–ö–ª–∞—Å—Å–∏–∫–∞": "üèÉ",
                "–ñ–µ–Ω—Å–∫–∏–π": "üë©",
                "–ö–æ–º–∞–Ω–¥–∞": "üë•",
            }.get(participant[10], "üìÇ")
            category = f"{category_emoji} {participant[10]}"
        else:
            category = "üìÇ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞"

        # –ö–ª–∞—Å—Ç–µ—Ä —Å —ç–º–æ–¥–∑–∏
        if participant[11]:
            cluster_emoji = {
                "A": "üÖ∞Ô∏è",
                "B": "üÖ±Ô∏è",
                "C": "üÖ≤",
                "D": "üÖ≥",
                "E": "üÖ¥",
                "F": "üÖµ",
                "G": "üÖ∂",
            }.get(participant[11], "üéØ")
            cluster = f"{cluster_emoji} {participant[11]}"
        else:
            cluster = "üéØ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω"

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ
        team_name = participant[12]
        team_invite_code = participant[13]

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã
        payment_emoji = "‚úÖ" if payment_status == "paid" else "‚è≥"
        payment_text = (
            "–æ–ø–ª–∞—á–µ–Ω–æ" if payment_status == "paid" else "–æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
        )

        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        participant_info = (
            f"‚úÖ <b>–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!</b>\n\n"
            f"üìù <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n"
            f"‚Ä¢ –ò–º—è: {name}\n"
            f"‚Ä¢ –¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è: {target_time}\n"
            f"‚Ä¢ –ü–æ–ª: {gender}\n"
            f"‚Ä¢ –ë–µ–≥–æ–≤–æ–π –Ω–æ–º–µ—Ä: {bib_number}\n"
            f"‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n"
            f"‚Ä¢ –ö–ª–∞—Å—Ç–µ—Ä: {cluster}\n\n"
            f"üí∞ <b>–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã:</b> {payment_emoji} {payment_text}\n\n"
        )

        if payment_status != "paid":
            participant_info += f"üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É —É—á–∞—Å—Ç–∏—è {get_participation_fee_text()}!"
        else:
            participant_info += "üéâ –í—Å–µ –≥–æ—Ç–æ–≤–æ –∫ —Å—Ç–∞—Ä—Ç—É! –£–≤–∏–¥–∏–º—Å—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏!"

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü–µ—Ä–µ–æ—Ñ–æ—Ä–º–∏—Ç—å —Å–ª–æ—Ç" –∏ "–û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ"
        keyboard_buttons = [
            [
                InlineKeyboardButton(
                    text="üîÑ –ü–µ—Ä–µ–æ—Ñ–æ—Ä–º–∏—Ç—å —Å–ª–æ—Ç", callback_data="slot_transfer"
                )
            ]
        ]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞"
        # –£—Å–ª–æ–≤–∏—è: –∫–∞—Ç–µ–≥–æ—Ä–∏—è "–ö–æ–º–∞–Ω–¥–∞", –µ—Å—Ç—å team_invite_code (—Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã), –∏ –≤—Ç–æ—Ä–æ–π —É—á–∞—Å—Ç–Ω–∏–∫ –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è
        if participant[10] == "–ö–æ–º–∞–Ω–¥–∞" and team_invite_code:
            from database import count_team_members

            team_members_count = count_team_members(team_name)

            if team_members_count < 2:
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
                participant_info = (
                    f"‚úÖ <b>–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!</b>\n\n"
                    f"üìù <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n"
                    f"‚Ä¢ –ò–º—è: {name}\n"
                    f"‚Ä¢ –¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è: {target_time}\n"
                    f"‚Ä¢ –ü–æ–ª: {gender}\n"
                    f"‚Ä¢ –ë–µ–≥–æ–≤–æ–π –Ω–æ–º–µ—Ä: {bib_number}\n"
                    f"‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n"
                    f"‚Ä¢ –ö–æ–º–∞–Ω–¥–∞: {team_name}\n"
                    f"‚Ä¢ –ö–ª–∞—Å—Ç–µ—Ä: {cluster}\n\n"
                    f"üí∞ <b>–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã:</b> {payment_emoji} {payment_text}\n\n"
                )

                if payment_status != "paid":
                    participant_info += f"üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É —É—á–∞—Å—Ç–∏—è {get_participation_fee_text()}!\n\n"
                else:
                    participant_info += "üéâ –í—Å–µ –≥–æ—Ç–æ–≤–æ –∫ —Å—Ç–∞—Ä—Ç—É! –£–≤–∏–¥–∏–º—Å—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏!\n\n"

                participant_info += "üë• <b>–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –≤ –∫–æ–º–∞–Ω–¥—É!</b>"

                # –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
                bot_username = (await bot.get_me()).username
                invite_link = f"https://t.me/{bot_username}?start=team_{team_invite_code}"

                # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞" –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π "–ü–µ—Ä–µ–æ—Ñ–æ—Ä–º–∏—Ç—å —Å–ª–æ—Ç"
                keyboard_buttons.insert(0, [
                    InlineKeyboardButton(
                        text="üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞",
                        url=f"https://t.me/share/url?url={invite_link}&text=–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ '{team_name}' –Ω–∞ –∑–∞–±–µ–≥–µ!"
                    )
                ])

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ" –≤ –∫–æ–Ω–µ—Ü
        keyboard_buttons.append([
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ", callback_data="cancel_participation"
            )
        ])

        participant_keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)

        await message.answer(participant_info, reply_markup=participant_keyboard)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è
    if is_user_in_waitlist(user_id):
        waitlist_entry = get_waitlist_by_user_id(user_id)

        if waitlist_entry:
            position, total_waiting = get_waitlist_position(user_id)
            name = waitlist_entry[3]  # name at index 3
            role = waitlist_entry[5]  # role at index 5
            role_display = "–±–µ–≥—É–Ω–∞" if role == "runner" else "–≤–æ–ª–æ–Ω—Ç—ë—Ä–∞"
            status = waitlist_entry[8]  # status at index 8
            team_name = waitlist_entry[11]  # team_name at index 11
            team_invite_code = waitlist_entry[12]  # team_invite_code at index 12

            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏ –æ—Ç–º–µ–Ω—ã —É—á–∞—Å—Ç–∏—è
            waitlist_keyboard_buttons = []

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞" –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –≤ –æ—á–µ—Ä–µ–¥–∏
            if team_name and team_invite_code:
                from database import count_team_members

                team_members_count = count_team_members(team_name)

                if team_members_count < 2:
                    # –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã –≤ –æ—á–µ—Ä–µ–¥–∏ - –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
                    bot_username = (await bot.get_me()).username
                    invite_link = f"https://t.me/{bot_username}?start=team_{team_invite_code}"

                    waitlist_keyboard_buttons.append([
                        InlineKeyboardButton(
                            text="üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞",
                            url=f"https://t.me/share/url?url={invite_link}&text=–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ '{team_name}' –Ω–∞ –∑–∞–±–µ–≥–µ!"
                        )
                    ])

            waitlist_keyboard_buttons.extend([
                [
                    InlineKeyboardButton(
                        text="üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å",
                        callback_data="check_waitlist_status",
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ",
                        callback_data="cancel_participation",
                    )
                ],
            ])

            waitlist_keyboard = InlineKeyboardMarkup(inline_keyboard=waitlist_keyboard_buttons)

            if status == "notified":
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω –æ –¥–æ—Å—Ç—É–ø–Ω–æ–º –º–µ—Å—Ç–µ
                message_text = (
                    f"üéâ <b>{name}, –¥–ª—è –≤–∞—Å –æ—Å–≤–æ–±–æ–¥–∏–ª–æ—Å—å –º–µ—Å—Ç–æ!</b>\n\n"
                    f"üìã –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞ —Ä–æ–ª—å {role_display}.\n"
                    f"üì¨ –í–∞–º –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —É—á–∞—Å—Ç–∏—è.\n\n"
                    f"‚è∞ <b>–í–∞–∂–Ω–æ:</b> –£ –≤–∞—Å –µ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!\n\n"
                    f"üí° –ù–∞–π–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
                )
            else:
                # –û–±—ã—á–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ
                message_text = (
                    f"üìã <b>{name}, –≤—ã –≤ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è!</b>\n\n"
                    f"üî¢ <b>–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è:</b> {position} –∏–∑ {total_waiting}\n"
                    f"üë• <b>–†–æ–ª—å:</b> {role_display}\n\n"
                    f"‚è≥ <b>–û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–≤–æ–±–æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.</b>\n"
                    f"–ú—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–æ–±—â–∏–º –≤–∞–º, –∫–æ–≥–¥–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—Å—è –º–µ—Å—Ç–æ!\n\n"
                    f"üì± –°–ª–µ–¥–∏—Ç–µ –∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
                )

                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–æ–º–∞–Ω–¥–µ
                if team_name:
                    message_text = (
                        f"üìã <b>{name}, –≤—ã –≤ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è!</b>\n\n"
                        f"üî¢ <b>–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è:</b> {position} –∏–∑ {total_waiting}\n"
                        f"üë• <b>–†–æ–ª—å:</b> {role_display}\n"
                        f"üë• <b>–ö–æ–º–∞–Ω–¥–∞:</b> {team_name}\n\n"
                        f"‚è≥ <b>–û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–≤–æ–±–æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.</b>\n"
                        f"–ú—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–æ–±—â–∏–º –≤–∞–º, –∫–æ–≥–¥–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—Å—è –º–µ—Å—Ç–æ!\n\n"
                        f"üì± –°–ª–µ–¥–∏—Ç–µ –∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
                    )

                    if team_invite_code and team_members_count < 2:
                        message_text += "\n\nüë• <b>–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –≤ –∫–æ–º–∞–Ω–¥—É!</b>"

            await message.answer(message_text, reply_markup=waitlist_keyboard)
            return

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ pending_registrations
    username = message.from_user.username or "–Ω–µ —É–∫–∞–∑–∞–Ω"
    success = add_pending_registration(user_id, username)

    if not success:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞—Ñ–∏—à–µ–π –µ—Å–ª–∏ –µ—Å—Ç—å
    try:
        start_message = messages["start_message"].format(
            fee=get_participation_fee_text(),
            event_date=get_event_date_text(),
            event_time=get_event_time_text(),
            event_location=get_event_location_text(),
        )

        afisha_path = "/app/images/afisha.jpeg"
        if os.path.exists(afisha_path):
            await bot.send_photo(
                chat_id=user_id,
                photo=FSInputFile(path=afisha_path),
                caption=start_message,
                reply_markup=create_start_registration_keyboard(),
            )
        else:
            await message.answer(
                start_message, reply_markup=create_start_registration_keyboard()
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await message.answer(
            messages["start_message"].format(
                fee=get_participation_fee_text(),
                event_date=get_event_date_text(),
                event_time=get_event_time_text(),
                event_location=get_event_location_text(),
            ),
            reply_markup=create_start_registration_keyboard(),
        )


async def handle_start_registration(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    user_id = callback.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å—Ç–æ—Ä–∏—è —É—á–∞—Å—Ç–∏—è
    from database import get_latest_user_result

    latest_result = get_latest_user_result(user_id)

    if latest_result and latest_result.get("name"):
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª —Ä–∞–Ω–µ–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –∏–º—è
        name = latest_result.get("name")
        await state.update_data(name=name, role="runner")

        try:
            # Try to edit as text message first
            await callback.message.edit_text(
                f"üëã –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞, {name}!\n\n"
                f"‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Ü–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç—Ä–∞—Å—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, '5:30' –∏–ª–∏ '1:05:30'):"
            )
        except Exception:
            # If it fails, it might be a photo message, try editing caption
            try:
                await callback.message.edit_caption(
                    caption=f"üëã –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞, {name}!\n\n"
                    f"‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Ü–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç—Ä–∞—Å—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, '5:30' –∏–ª–∏ '1:05:30'):"
                )
            except Exception:
                # If both fail, send a new message
                await callback.message.answer(
                    f"üëã –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞, {name}!\n\n"
                    f"‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Ü–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç—Ä–∞—Å—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, '5:30' –∏–ª–∏ '1:05:30'):"
                )

        await state.set_state(RegistrationForm.waiting_for_target_time)
    else:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è
        try:
            # Try to edit as text message first
            await callback.message.edit_text("üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è:")
        except Exception:
            # If it fails, it might be a photo message, try editing caption
            try:
                await callback.message.edit_caption(
                    caption="üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è:"
                )
            except Exception:
                # If both fail, send a new message
                await callback.message.answer("üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è:")

        await state.set_state(RegistrationForm.waiting_for_name)

    await callback.answer()


async def handle_name_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏"""
    name = sanitize_input(message.text, 50)

    is_valid, error_message = validate_name(name)
    if not is_valid:
        await message.answer(
            f"‚ùå {error_message}", reply_markup=create_main_menu_keyboard()
        )
        return

    await state.update_data(name=name, role="runner")
    await message.answer(
        "‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Ü–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç—Ä–∞—Å—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, '5:30' –∏–ª–∏ '1:05:30'):"
    )
    await state.set_state(RegistrationForm.waiting_for_target_time)


async def handle_time_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Ü–µ–ª–µ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"""
    target_time = sanitize_input(message.text, 10)

    is_valid, error_message = validate_time_format(target_time)
    if not is_valid:
        await message.answer(
            f"‚ùå {error_message}", reply_markup=create_main_menu_keyboard()
        )
        return

    await state.update_data(target_time=target_time)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –∫–æ–º–∞–Ω–¥–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–ª–∏ –æ–±—ã—á–Ω–∞—è
    user_data = await state.get_data()
    is_team_registration = user_data.get("is_team_registration", False)
    is_team_member = user_data.get("is_team_member", False)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—â–∏–π—Å—è —É—á–∞—Å—Ç–Ω–∏–∫ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å

    if is_team_registration and not is_team_member:
        # –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
        await message.answer("üë• –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã:")
        await state.set_state(RegistrationForm.waiting_for_team_name)
    else:
        # –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ –±–µ–≥—É–Ω–∞ –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—â–µ–≥–æ—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª
        await message.answer("üë§ –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:", reply_markup=create_gender_keyboard())
        await state.set_state(RegistrationForm.waiting_for_gender)


async def handle_gender_selection(
    callback: CallbackQuery, state: FSMContext, bot: Bot, admin_id: int
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    if callback.data not in ["male", "female"]:
        await callback.message.edit_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä –ø–æ–ª–∞.")
        await callback.answer()
        await state.clear()
        return

    user_id = callback.from_user.id
    user_data = await state.get_data()
    username = callback.from_user.username or "–Ω–µ —É–∫–∞–∑–∞–Ω"
    name = user_data.get("name")
    target_time = user_data.get("target_time")
    role = "runner"
    gender = callback.data

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã
    max_runners = get_setting("max_runners")
    if max_runners is None:
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
        )
        await callback.answer()
        await state.clear()
        return

    current_runners = get_participant_count_by_role("runner")

    # Ensure we have valid integers for comparison
    try:
        max_runners = int(max_runners)
        current_runners = int(current_runners) if current_runners is not None else 0
    except (ValueError, TypeError):
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
        )
        await callback.answer()
        await state.clear()
        return

    if current_runners >= max_runners:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞–Ω–∏—è
        success = add_to_waitlist(user_id, username, name, target_time, role, gender)

        if success:
            # –ù–ï —É–¥–∞–ª—è–µ–º –∏–∑ pending - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–µ—Ç—Å—è –≤ pending –∏ waitlist –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
            # delete_pending_registration(user_id)  # –£–±—Ä–∞–Ω–æ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–µ

            await callback.message.edit_text(
                f"üìã <b>–í—Å–µ —Å–ª–æ—Ç—ã –¥–ª—è –±–µ–≥—É–Ω–æ–≤ –∑–∞–Ω—è—Ç—ã!</b>\n\n"
                f"‚úÖ –í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞–Ω–∏—è.\n"
                f"üì± –£–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–æ–≥–¥–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—Å—è –º–µ—Å—Ç–æ!\n\n"
                f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /waitlist_status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏."
            )

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
            try:
                from database import get_waitlist_by_role

                waitlist_count = len(get_waitlist_by_role("runner"))

                admin_text = (
                    f"üìã <b>–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è</b>\n\n"
                    f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {name} (@{username})\n"
                    f"üÜî <b>ID:</b> <code>{user_id}</code>\n"
                    f"‚è∞ <b>–¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è:</b> {target_time}\n"
                    f"üë§ <b>–ü–æ–ª:</b> {'–º—É–∂—Å–∫–æ–π' if gender == 'male' else '–∂–µ–Ω—Å–∫–∏–π'}\n"
                    f"üìä <b>–í—Å–µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥–∏:</b> {waitlist_count}\n"
                    f"üíº <b>–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç:</b> {max_runners}\n"
                )

                # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
                waitlist_admin_keyboard = InlineKeyboardMarkup(
                    inline_keyboard=[
                        [
                            InlineKeyboardButton(
                                text="‚úÖ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏–∑ –ª–∏—Å—Ç–∞ –æ–∂–∏–¥–∞–Ω–∏—è",
                                callback_data=f"promote_from_waitlist_{user_id}"
                            )
                        ]
                    ]
                )

                await bot.send_message(admin_id, admin_text, reply_markup=waitlist_admin_keyboard)

            except Exception as e:
                logger.error(
                    f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –∑–∞–ø–∏—Å–∏ –≤ –æ—á–µ—Ä–µ–¥—å: {e}"
                )
        else:
            await callback.message.edit_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
    else:
        # –ï—Å—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã - —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        success = add_participant(user_id, username, name, target_time, role, gender)

        if success:
            # –£–¥–∞–ª—è–µ–º –∏–∑ pending_registrations
            delete_pending_registration(user_id)

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            gender_display = "–º—É–∂—Å–∫–æ–π" if gender == "male" else "–∂–µ–Ω—Å–∫–∏–π"
            success_message = (
                f"‚úÖ <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n\n"
                f"üìù <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n"
                f"‚Ä¢ –ò–º—è: {name}\n"
                f"‚Ä¢ –¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è: {target_time}\n"
                f"‚Ä¢ –ü–æ–ª: {gender_display}\n"
                f"‚Ä¢ –†–æ–ª—å: –±–µ–≥—É–Ω\n\n"
                f"üí∞ <b>–í–∞–∂–Ω–æ:</b> –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É —É—á–∞—Å—Ç–∏—è {get_participation_fee_text()}!\n"
                f"üì± –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã."
            )

            await callback.message.edit_text(success_message)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–æ–Ω—Å–æ—Ä–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å
            try:
                sponsor_image_path = config.get(
                    "sponsor_image_path", "/app/images/sponsor_image.jpeg"
                )
                if os.path.exists(sponsor_image_path):
                    await bot.send_photo(
                        chat_id=user_id,
                        photo=FSInputFile(path=sponsor_image_path),
                        caption="ü§ù –ù–∞—à–∏ —Å–ø–æ–Ω—Å–æ—Ä—ã",
                    )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–æ–Ω—Å–æ—Ä–æ–≤: {e}")

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            try:
                admin_message = (
                    f"üÜï <b>–ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è!</b>\n\n"
                    f"üë§ <b>–£—á–∞—Å—Ç–Ω–∏–∫:</b> {name}\n"
                    f"‚è∞ <b>–¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è:</b> {target_time}\n"
                    f"üë§ <b>–ü–æ–ª:</b> {gender_display}\n"
                    f"üÜî <b>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> <code>{user_id}</code>\n"
                    f"üì± <b>Username:</b> @{username}\n\n"
                    f"üé≠ <b>–†–æ–ª—å:</b> –±–µ–≥—É–Ω\n"
                    f"üí∞ <b>–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã:</b> –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è\n"
                    f"üìä <b>–í—Å–µ–≥–æ –±–µ–≥—É–Ω–æ–≤:</b> {current_runners + 1}/{max_runners}"
                )

                await bot.send_message(admin_id, admin_message)

            except Exception as e:
                logger.error(
                    f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}"
                )
        else:
            await callback.message.edit_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )

    await callback.answer()
    await state.clear()


async def handle_cancel_participation_request(
    callback: CallbackQuery, bot: Bot, admin_id: int
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É —É—á–∞—Å—Ç–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ"""
    user_id = callback.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∏–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏
    from database import get_participant_by_user_id, is_user_in_waitlist

    participant = get_participant_by_user_id(user_id)
    in_waitlist = is_user_in_waitlist(user_id)

    if not participant and not in_waitlist:
        await callback.message.edit_text(
            "‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –≥–æ–Ω–∫–µ.",
        )
        await callback.answer()
        return

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    confirm_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å", callback_data="confirm_cancel_participation"
                ),
                InlineKeyboardButton(
                    text="‚ùå –ù–µ—Ç, –æ—Å—Ç–∞—Ç—å—Å—è",
                    callback_data="decline_cancel_participation",
                ),
            ]
        ]
    )

    await callback.message.edit_text(
        "‚ö†Ô∏è <b>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ?</b>\n\n"
        "–ü–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã –≤—ã –±—É–¥–µ—Ç–µ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –ª–∏–º–∏—Ç –º–µ—Å—Ç –±—É–¥–µ—Ç —É–º–µ–Ω—å—à–µ–Ω.\n"
        "–í—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start.",
        reply_markup=confirm_keyboard,
    )
    await callback.answer()


async def handle_confirm_cancel_participation(
    callback: CallbackQuery, bot: Bot, admin_id: int
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã —É—á–∞—Å—Ç–∏—è"""
    user_id = callback.from_user.id
    username = callback.from_user.username or "–Ω–µ —É–∫–∞–∑–∞–Ω"

    from database import cancel_user_participation

    result = cancel_user_participation(user_id)

    if result["success"]:
        user_name = result["user_name"]
        role = result["role"]
        source = result["source"]
        old_limit = result.get("old_limit")
        new_limit = result.get("new_limit")
        team_partner = result.get("team_partner")

        role_display = "–±–µ–≥—É–Ω–æ–≤" if role == "runner" else "–≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–≤"
        source_display = (
            "—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤" if source == "participants" else "–æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è"
        )

        # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        user_message = (
            f"‚úÖ <b>–£—á–∞—Å—Ç–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ</b>\n\n"
            f"–í—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–ø–∏—Å–∫–∞ {source_display}.\n"
        )

        user_message += "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start."

        await callback.message.edit_text(user_message)

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
        try:
            admin_message = (
                f"‚ö†Ô∏è <b>–û—Ç–º–µ–Ω–∞ —É—á–∞—Å—Ç–∏—è</b>\n\n"
                f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user_name} (@{username})\n"
                f"üÜî <b>ID:</b> <code>{user_id}</code>\n"
                f"üìã <b>–†–æ–ª—å:</b> {role_display}\n"
                f"üìç <b>–û—Ç–∫—É–¥–∞ —É–¥–∞–ª–µ–Ω:</b> –∏–∑ {source_display.capitalize()}\n"
            )

            if old_limit is not None and new_limit is not None:
                admin_message += (
                    f"üìä <b>–õ–∏–º–∏—Ç {role_display}:</b> {old_limit} ‚Üí {new_limit}\n"
                )

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ø–∞—Ä–Ω–∏–∫–µ –ø–æ –∫–æ–º–∞–Ω–¥–µ –µ—Å–ª–∏ –µ—Å—Ç—å
            if team_partner:
                admin_message += (
                    f"\nüë• <b>–ù–∞–ø–∞—Ä–Ω–∏–∫ –ø–æ –∫–æ–º–∞–Ω–¥–µ:</b> {team_partner['name']} "
                    f"(@{team_partner['username'] or '–Ω–µ—Ç'}) "
                    f"(ID: <code>{team_partner['user_id']}</code>)\n"
                    f"üìç <b>–°—Ç–∞—Ç—É—Å –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞:</b> {source_display}\n"
                    f"üìÇ <b>–ö–æ–º–∞–Ω–¥–∞:</b> {team_partner['team_name']}"
                )

            await bot.send_message(admin_id, admin_message)
        except Exception as e:
            logger.error(
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–± –æ—Ç–º–µ–Ω–µ —É—á–∞—Å—Ç–∏—è: {e}"
            )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if team_partner:
            try:
                partner_source_display = (
                    "—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤" if team_partner['source'] == "participants" else "–æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è"
                )
                partner_message = (
                    f"‚ö†Ô∏è <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ</b>\n\n"
                    f"–í–∞—à –Ω–∞–ø–∞—Ä–Ω–∏–∫ –ø–æ –∫–æ–º–∞–Ω–¥–µ <b>{user_name}</b> –æ—Ç–º–µ–Ω–∏–ª —É—á–∞—Å—Ç–∏–µ –∏ –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ {source_display}.\n\n"
                    f"üë• <b>–ö–æ–º–∞–Ω–¥–∞:</b> {team_partner['team_name']}\n"
                    f"üìç <b>–í–∞—à —Å—Ç–∞—Ç—É—Å:</b> {partner_source_display}\n\n"
                    f"üí° –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–æ–≤–æ–≥–æ –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞ –≤ –∫–æ–º–∞–Ω–¥—É!"
                )

                # –ü–æ–ª—É—á–∞–µ–º team_invite_code –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞
                partner_team_invite_code = team_partner.get('team_invite_code')

                # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
                partner_keyboard_buttons = []

                # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è - –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞"
                if partner_team_invite_code:
                    bot_username = (await bot.get_me()).username
                    invite_link = f"https://t.me/{bot_username}?start=team_{partner_team_invite_code}"
                    partner_keyboard_buttons.append([
                        InlineKeyboardButton(
                            text="üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞",
                            url=f"https://t.me/share/url?url={invite_link}&text=–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ '{team_partner['team_name']}' –Ω–∞ –∑–∞–±–µ–≥–µ!"
                        )
                    ])

                # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
                partner_keyboard_buttons.append([
                    InlineKeyboardButton(
                        text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        callback_data="main_menu"
                    )
                ])

                partner_keyboard = InlineKeyboardMarkup(inline_keyboard=partner_keyboard_buttons)

                await bot.send_message(team_partner['user_id'], partner_message, reply_markup=partner_keyboard)
                logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {team_partner['user_id']}")
            except TelegramForbiddenError:
                logger.warning(f"–ù–∞–ø–∞—Ä–Ω–∏–∫ –ø–æ –∫–æ–º–∞–Ω–¥–µ {team_partner['user_id']} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ {team_partner['user_id']}: {e}")
    else:
        error_message = result.get("error", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
        await callback.message.edit_text(
            f"‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —É—á–∞—Å—Ç–∏—è</b>\n\n{error_message}"
        )

    await callback.answer()


async def handle_decline_cancel_participation(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫–∞–∑–∞ –æ—Ç –æ—Ç–º–µ–Ω—ã —É—á–∞—Å—Ç–∏—è"""
    await callback.message.edit_text(
        "‚úÖ <b>–û—Ç–º–µ–Ω–∞ —É—á–∞—Å—Ç–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n\n"
        "–í—ã –æ—Å—Ç–∞—ë—Ç–µ—Å—å –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
    )
    await callback.answer()


async def handle_team_referral_start(
    message: Message, referral_code: str, bot: Bot, admin_id: int, state: FSMContext
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –∫–æ–º–∞–Ω–¥—ã"""
    user_id = message.from_user.id

    # Check if team mode is enabled
    team_mode_enabled = get_setting("team_mode_enabled")
    team_mode_enabled = int(team_mode_enabled) if team_mode_enabled is not None else 1

    if team_mode_enabled == 0:
        await message.answer(
            "‚ùå <b>–ö–æ–º–∞–Ω–¥–Ω—ã–π —Ä–µ–∂–∏–º –æ—Ç–∫–ª—é—á–µ–Ω</b>\n\n"
            "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∫–∞–∫ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –±–µ–≥—É–Ω —á–µ—Ä–µ–∑ /start."
        )
        return

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ –∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ team_CODE
    team_code = referral_code[5:]  # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "team_"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π –∫–æ–¥ –≤ –ë–î (–∏—â–µ—Ç –∏ –≤ participants, –∏ –≤ waitlist)
    from database import get_participant_by_team_invite_code

    team_creator_data = get_participant_by_team_invite_code(team_code)

    if not team_creator_data:
        await message.answer(
            "‚ùå <b>–ù–µ–≤–µ—Ä–Ω–∞—è –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è</b>\n\n"
            "–í–æ–∑–º–æ–∂–Ω–æ, —Å—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞ –∏–ª–∏ –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞.\n"
            "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º –∫–æ–º–∞–Ω–¥—ã."
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ
    from database import get_participant_by_user_id

    participant = get_participant_by_user_id(user_id)
    if participant:
        await message.answer(
            "‚ùå <b>–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!</b>\n\n"
            "–ß—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ, —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–º–µ–Ω–∏—Ç–µ —Å–≤–æ—é —Ç–µ–∫—É—â—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start."
        )
        return

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ
    creator_user_id, team_name, creator_name, creator_in_waitlist = team_creator_data

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∞ –ª–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —ç—Ç–∞ —Å—Å—ã–ª–∫–∞ (–∫–æ–¥ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
    # –°—á–∏—Ç–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —ç—Ç–∏–º team_name –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π "–ö–æ–º–∞–Ω–¥–∞"
    from database import count_team_members

    team_members_count = count_team_members(team_name)

    if team_members_count >= 2:
        await message.answer(
            f"‚ùå <b>–ö–æ–º–∞–Ω–¥–∞ —É–∂–µ —É–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞–Ω–∞</b>\n\n"
            f"–í –∫–æ–º–∞–Ω–¥–µ '{team_name}' —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (2).\n"
            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º."
        )
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    await state.update_data(
        team_name=team_name,
        team_invite_code=None,  # –í—Ç–æ—Ä–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –Ω–µ –Ω—É–∂–µ–Ω —Å–≤–æ–π –∫–æ–¥
        is_team_member=True,
        is_team_registration=True,
        creator_in_waitlist=creator_in_waitlist,  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –≤ –ª–∏—Å—Ç–µ –æ–∂–∏–¥–∞–Ω–∏—è –ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å
        creator_user_id=creator_user_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å—Ç–æ—Ä–∏—è —É—á–∞—Å—Ç–∏—è
    from database import get_latest_user_result

    latest_result = get_latest_user_result(user_id)

    status_text = "–≤ —Å–ø–∏—Å–∫–µ –æ–∂–∏–¥–∞–Ω–∏—è" if creator_in_waitlist else "—É—á–∞—Å—Ç–Ω–∏–∫–æ–º"

    if latest_result and latest_result.get("name"):
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª —Ä–∞–Ω–µ–µ
        name = latest_result.get("name")
        await state.update_data(name=name, role="runner")

        await message.answer(
            f"üëã –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞, {name}!\n\n"
            f"üë• <b>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–∞–Ω–¥–µ '{team_name}'</b>\n"
            f"–°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã: {creator_name} ({status_text})\n\n"
            f"‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Ü–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç—Ä–∞—Å—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, '5:30' –∏–ª–∏ '1:05:30'):"
        )
        await state.set_state(RegistrationForm.waiting_for_target_time)
    else:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        await message.answer(
            f"üë• <b>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–∞–Ω–¥–µ '{team_name}'</b>\n"
            f"–°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã: {creator_name} ({status_text})\n\n"
            f"üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è:"
        )
        await state.set_state(RegistrationForm.waiting_for_name)


async def handle_start_team_registration(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    user_id = callback.from_user.id

    # Check if team mode is enabled
    team_mode_enabled = get_setting("team_mode_enabled")
    team_mode_enabled = int(team_mode_enabled) if team_mode_enabled is not None else 1

    if team_mode_enabled == 0:
        await callback.message.edit_text(
            "‚ùå <b>–ö–æ–º–∞–Ω–¥–Ω—ã–π —Ä–µ–∂–∏–º –æ—Ç–∫–ª—é—á–µ–Ω</b>\n\n"
            "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∫–∞–∫ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –±–µ–≥—É–Ω."
        )
        await callback.answer()
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å—Ç–æ—Ä–∏—è —É—á–∞—Å—Ç–∏—è
    from database import get_latest_user_result

    latest_result = get_latest_user_result(user_id)

    if latest_result and latest_result.get("name"):
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª —Ä–∞–Ω–µ–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –∏–º—è
        name = latest_result.get("name")
        await state.update_data(name=name, role="runner", is_team_registration=True)

        try:
            await callback.message.edit_text(
                f"üëã –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞, {name}!\n\n"
                f"üë• <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã</b>\n\n"
                f"‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Ü–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç—Ä–∞—Å—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, '5:30' –∏–ª–∏ '1:05:30'):"
            )
        except Exception:
            try:
                await callback.message.edit_caption(
                    caption=f"üëã –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞, {name}!\n\n"
                    f"üë• <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã</b>\n\n"
                    f"‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Ü–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç—Ä–∞—Å—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, '5:30' –∏–ª–∏ '1:05:30'):"
                )
            except Exception:
                await callback.message.answer(
                    f"üëã –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞, {name}!\n\n"
                    f"üë• <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã</b>\n\n"
                    f"‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Ü–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç—Ä–∞—Å—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, '5:30' –∏–ª–∏ '1:05:30'):"
                )

        await state.set_state(RegistrationForm.waiting_for_target_time)
    else:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è
        try:
            await callback.message.edit_text(
                "üë• <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã</b>\n\n"
                "üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è:"
            )
        except Exception:
            try:
                await callback.message.edit_caption(
                    caption="üë• <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã</b>\n\n"
                    "üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è:"
                )
            except Exception:
                await callback.message.answer(
                    "üë• <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã</b>\n\n"
                    "üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è:"
                )

        await state.update_data(is_team_registration=True)
        await state.set_state(RegistrationForm.waiting_for_name)

    await callback.answer()


async def handle_team_name_input(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã"""
    team_name = sanitize_input(message.text, 100)

    if not team_name or len(team_name) < 2:
        await message.answer(
            "‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ö–æ—Ç—è –±—ã 2 —Å–∏–º–≤–æ–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:"
        )
        return

    await state.update_data(team_name=team_name)
    await message.answer("üë§ –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:", reply_markup=create_gender_keyboard())
    await state.set_state(RegistrationForm.waiting_for_gender)


async def handle_team_gender_selection(
    callback: CallbackQuery, state: FSMContext, bot: Bot, admin_id: int
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    if callback.data not in ["male", "female"]:
        await callback.message.edit_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä –ø–æ–ª–∞.")
        await callback.answer()
        await state.clear()
        return

    user_id = callback.from_user.id
    user_data = await state.get_data()
    username = callback.from_user.username or "–Ω–µ —É–∫–∞–∑–∞–Ω"
    name = user_data.get("name")
    target_time = user_data.get("target_time")
    team_name = user_data.get("team_name")
    role = "runner"
    gender = callback.data

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—â–∏–π—Å—è —É—á–∞—Å—Ç–Ω–∏–∫ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã
    is_team_member = user_data.get("is_team_member", False)
    creator_in_waitlist = user_data.get("creator_in_waitlist", False)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã
    max_runners = get_setting("max_runners")
    if max_runners is None:
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
        )
        await callback.answer()
        await state.clear()
        return

    current_runners = get_participant_count_by_role("runner")

    try:
        max_runners = int(max_runners)
        current_runners = int(current_runners) if current_runners is not None else 0
    except (ValueError, TypeError):
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
        )
        await callback.answer()
        await state.clear()
        return

    # –ï—Å–ª–∏ –≤—Ç–æ—Ä–æ–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—è
    if is_team_member:
        # –ï—Å–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å –≤ waitlist - –≤—Ç–æ—Ä–æ–π —Ç–æ–∂–µ –≤ waitlist
        if creator_in_waitlist:
            # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ waitlist
            success = add_to_waitlist(
                user_id, username, name, target_time, role, gender,
                team_name, None  # –í—Ç–æ—Ä–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –Ω–µ –Ω—É–∂–µ–Ω –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
            )

            if success:
                user_message = (
                    f"‚úÖ <b>–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∫–æ–º–∞–Ω–¥–µ '{team_name}'!</b>\n\n"
                    f"üë• –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –æ–∂–∏–¥–∞–Ω–∏—è.\n"
                    f"üìã –í—ã —Ç–∞–∫–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞–Ω–∏—è.\n"
                    f"üì± –ö–æ–≥–¥–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—Å—è –º–µ—Å—Ç–æ, –≤—ã –æ–±–∞ –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –≤ —É—á–∞—Å—Ç–Ω–∏–∫–∏!\n\n"
                    f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '–ö–æ–º–∞–Ω–¥–∞' –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏—Å–≤–æ–µ–Ω–∞.\n\n"
                    f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /waitlist_status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏."
                )
                await callback.message.edit_text(user_message)

                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
                try:
                    from database import get_waitlist_by_role

                    waitlist_count = len(get_waitlist_by_role("runner"))

                    admin_text = (
                        f"üìã <b>–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è (–ö–û–ú–ê–ù–î–ê - 2–π —É—á–∞—Å—Ç–Ω–∏–∫)</b>\n\n"
                        f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {name} (@{username})\n"
                        f"üë• <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b> {team_name}\n"
                        f"üÜî <b>ID:</b> <code>{user_id}</code>\n"
                        f"‚è∞ <b>–¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è:</b> {target_time}\n"
                        f"üë§ <b>–ü–æ–ª:</b> {'–º—É–∂—Å–∫–æ–π' if gender == 'male' else '–∂–µ–Ω—Å–∫–∏–π'}\n"
                        f"üìä <b>–í—Å–µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥–∏:</b> {waitlist_count}\n"
                        f"üíº <b>–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç:</b> {max_runners}\n"
                        f"‚ÑπÔ∏è <b>–°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã –≤ waitlist</b>"
                    )

                    waitlist_admin_keyboard = InlineKeyboardMarkup(
                        inline_keyboard=[
                            [
                                InlineKeyboardButton(
                                    text="‚úÖ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏–∑ –ª–∏—Å—Ç–∞ –æ–∂–∏–¥–∞–Ω–∏—è",
                                    callback_data=f"promote_from_waitlist_{user_id}"
                                )
                            ]
                        ]
                    )

                    await bot.send_message(admin_id, admin_text, reply_markup=waitlist_admin_keyboard)

                except Exception as e:
                    logger.error(
                        f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –∑–∞–ø–∏—Å–∏ –≤ –æ—á–µ—Ä–µ–¥—å: {e}"
                    )
            else:
                await callback.message.edit_text(
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                )

            await callback.answer()
            await state.clear()
            return

        # –ï—Å–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ù–ï –≤ waitlist (—Ç.–µ. –≤ participants) - –≤—Ç–æ—Ä–æ–π –ø–æ–ø–∞–¥–∞–µ—Ç –≤ participants
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å—Ä–∞–∑—É –≤ participants —Å –∫–æ–º–∞–Ω–¥–æ–π
            from database import add_participant_with_team

            success = add_participant_with_team(
                user_id, username, name, target_time, role, gender, team_name, None  # –í—Ç–æ—Ä–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –Ω–µ –Ω—É–∂–µ–Ω –∫–æ–¥
            )

            if success:
                # –£–¥–∞–ª—è–µ–º –∏–∑ pending_registrations
                delete_pending_registration(user_id)

                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç max_runners –Ω–∞ 1, —Ç–∞–∫ –∫–∞–∫ –≤—Ç–æ—Ä–æ–π —É—á–∞—Å—Ç–Ω–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ–±—Ö–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–∞
                from database import set_setting
                new_max_runners = max_runners + 1
                set_setting("max_runners", new_max_runners)
                logger.info(f"–õ–∏–º–∏—Ç max_runners —É–≤–µ–ª–∏—á–µ–Ω —Å {max_runners} –¥–æ {new_max_runners} –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤—Ç–æ—Ä–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã '{team_name}'")

                gender_display = "–º—É–∂—Å–∫–æ–π" if gender == "male" else "–∂–µ–Ω—Å–∫–∏–π"

                # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
                complete_teams = count_complete_teams()

                user_message = (
                    f"‚úÖ <b>–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∫–æ–º–∞–Ω–¥–µ!</b>\n\n"
                    f"üìù <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n"
                    f"‚Ä¢ –ò–º—è: {name}\n"
                    f"‚Ä¢ –¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è: {target_time}\n"
                    f"‚Ä¢ –ü–æ–ª: {gender_display}\n"
                    f"‚Ä¢ –†–æ–ª—å: –±–µ–≥—É–Ω\n"
                    f"‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: üë• –ö–æ–º–∞–Ω–¥–∞\n"
                    f"‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: {team_name}\n\n"
                    f"üë• <b>–ü–æ–ª–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ:</b> {complete_teams}\n\n"
                    f"üí∞ <b>–í–∞–∂–Ω–æ:</b> –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É —É—á–∞—Å—Ç–∏—è {get_participation_fee_text()}!\n"
                    f"üì± –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã."
                )
                await callback.message.edit_text(user_message)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–æ–Ω—Å–æ—Ä–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å
                try:
                    sponsor_image_path = config.get(
                        "sponsor_image_path", "/app/images/sponsor_image.jpeg"
                    )
                    if os.path.exists(sponsor_image_path):
                        await bot.send_photo(
                            chat_id=user_id,
                            photo=FSInputFile(path=sponsor_image_path),
                            caption="ü§ù –ù–∞—à–∏ —Å–ø–æ–Ω—Å–æ—Ä—ã",
                        )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–æ–Ω—Å–æ—Ä–æ–≤: {e}")

                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                try:
                    # –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–µ–≥—É–Ω–æ–≤ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                    updated_runners = get_participant_count_by_role("runner")

                    admin_message = (
                        f"üÜï <b>–ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã (2–π —É—á–∞—Å—Ç–Ω–∏–∫)!</b>\n\n"
                        f"üë§ <b>–£—á–∞—Å—Ç–Ω–∏–∫:</b> {name}\n"
                        f"üë• <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b> {team_name}\n"
                        f"‚è∞ <b>–¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è:</b> {target_time}\n"
                        f"üë§ <b>–ü–æ–ª:</b> {gender_display}\n"
                        f"üÜî <b>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> <code>{user_id}</code>\n"
                        f"üì± <b>Username:</b> @{username}\n\n"
                        f"üé≠ <b>–†–æ–ª—å:</b> –±–µ–≥—É–Ω\n"
                        f"üìÇ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> üë• –ö–æ–º–∞–Ω–¥–∞ (–∞–≤—Ç–æ)\n"
                        f"üí∞ <b>–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã:</b> –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è\n"
                        f"üìä <b>–í—Å–µ–≥–æ –±–µ–≥—É–Ω–æ–≤:</b> {updated_runners}/{new_max_runners}\n"
                        f"üìà <b>–õ–∏–º–∏—Ç —É–≤–µ–ª–∏—á–µ–Ω:</b> {max_runners} ‚Üí {new_max_runners}\n"
                        f"‚ÑπÔ∏è <b>–°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º</b>"
                    )

                    await bot.send_message(admin_id, admin_message)

                except Exception as e:
                    logger.error(
                        f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}"
                    )

                # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–µ—Ä–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Ç–æ—Ä–æ–≥–æ
                try:
                    creator_user_id = user_data.get("creator_user_id")
                    if creator_user_id:
                        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –∫–æ–º–∞–Ω–¥—ã
                        creator_info = get_participant_by_user_id(creator_user_id)
                        if creator_info:
                            creator_name = creator_info[2]
                            creator_notification = (
                                f"üéâ <b>–ö –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫!</b>\n\n"
                                f"üë• <b>–ö–æ–º–∞–Ω–¥–∞:</b> {team_name}\n"
                                f"üë§ <b>–£—á–∞—Å—Ç–Ω–∏–∫:</b> {name}\n"
                                f"‚è∞ <b>–¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è:</b> {target_time}\n"
                                f"üë§ <b>–ü–æ–ª:</b> {gender_display}\n\n"
                                f"üë• <b>–ü–æ–ª–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ:</b> {complete_teams}\n\n"
                                f"‚úÖ –í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–µ–ø–µ—Ä—å –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞–Ω–∞!"
                            )
                            await bot.send_message(creator_user_id, creator_notification)
                            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é {creator_user_id}")
                        else:
                            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –∫–æ–º–∞–Ω–¥—ã {creator_user_id}")
                    else:
                        logger.warning("creator_user_id –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–≤–µ–¥–æ–º–∏—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–æ–º–∞–Ω–¥—ã")
                except TelegramForbiddenError:
                    logger.warning(f"–°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã {creator_user_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç")
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–æ–º–∞–Ω–¥—ã: {e}")
            else:
                await callback.message.edit_text(
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                )

            await callback.answer()
            await state.clear()
            return

    if current_runners >= max_runners:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–∞–Ω–¥–µ
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—â–∏–π—Å—è —É—á–∞—Å—Ç–Ω–∏–∫
        is_team_member = user_data.get("is_team_member", False)
        team_invite_code_to_save = user_data.get("team_invite_code")

        if not is_team_member:
            # –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
            import secrets
            team_invite_code_to_save = secrets.token_urlsafe(12)
        else:
            # –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—â–∏–π—Å—è —É—á–∞—Å—Ç–Ω–∏–∫ - –∫–æ–¥ –Ω–µ –Ω—É–∂–µ–Ω
            team_invite_code_to_save = None

        success = add_to_waitlist(
            user_id, username, name, target_time, role, gender,
            team_name, team_invite_code_to_save
        )

        if success:
            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if is_team_member:
                user_message = (
                    f"üìã <b>–í—Å–µ —Å–ª–æ—Ç—ã –¥–ª—è –±–µ–≥—É–Ω–æ–≤ –∑–∞–Ω—è—Ç—ã!</b>\n\n"
                    f"‚úÖ –í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã '{team_name}'.\n"
                    f"üì± –£–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–æ–≥–¥–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—Å—è –º–µ—Å—Ç–æ!\n"
                    f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '–ö–æ–º–∞–Ω–¥–∞' –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏—Å–≤–æ–µ–Ω–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏.\n\n"
                    f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /waitlist_status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏."
                )
            else:
                # –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã - –¥–∞–∂–µ –≤ –æ—á–µ—Ä–µ–¥–∏ –ø–æ–ª—É—á–∏—Ç –∫–æ–¥ –∏ –∫–Ω–æ–ø–∫—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
                bot_username = (await bot.get_me()).username
                invite_link = f"https://t.me/{bot_username}?start=team_{team_invite_code_to_save}"

                user_message = (
                    f"üìã <b>–í—Å–µ —Å–ª–æ—Ç—ã –¥–ª—è –±–µ–≥—É–Ω–æ–≤ –∑–∞–Ω—è—Ç—ã!</b>\n\n"
                    f"‚úÖ –í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã '{team_name}'.\n"
                    f"üì± –£–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–æ–≥–¥–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—Å—è –º–µ—Å—Ç–æ!\n"
                    f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '–ö–æ–º–∞–Ω–¥–∞' –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏—Å–≤–æ–µ–Ω–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏.\n\n"
                    f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /waitlist_status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏."
                )

                # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–≥–∞ –¥–∞–∂–µ –≤ –æ—á–µ—Ä–µ–¥–∏
                invite_keyboard = InlineKeyboardMarkup(
                    inline_keyboard=[
                        [
                            InlineKeyboardButton(
                                text="üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –≤ –∫–æ–º–∞–Ω–¥—É",
                                url=f"https://t.me/share/url?url={invite_link}&text=–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ '{team_name}' –Ω–∞ –∑–∞–±–µ–≥–µ!"
                            )
                        ]
                    ]
                )
                await callback.message.edit_text(user_message, reply_markup=invite_keyboard)

                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
                try:
                    from database import get_waitlist_by_role

                    waitlist_count = len(get_waitlist_by_role("runner"))

                    admin_text = (
                        f"üìã <b>–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è (–ö–û–ú–ê–ù–î–ê)</b>\n\n"
                        f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {name} (@{username})\n"
                        f"üë• <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b> {team_name}\n"
                        f"üÜî <b>ID:</b> <code>{user_id}</code>\n"
                        f"‚è∞ <b>–¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è:</b> {target_time}\n"
                        f"üë§ <b>–ü–æ–ª:</b> {'–º—É–∂—Å–∫–æ–π' if gender == 'male' else '–∂–µ–Ω—Å–∫–∏–π'}\n"
                        f"üìä <b>–í—Å–µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥–∏:</b> {waitlist_count}\n"
                        f"üíº <b>–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç:</b> {max_runners}\n"
                        f"üîó <b>–ö–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:</b> <code>{team_invite_code_to_save}</code>"
                    )

                    waitlist_admin_keyboard = InlineKeyboardMarkup(
                        inline_keyboard=[
                            [
                                InlineKeyboardButton(
                                    text="‚úÖ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏–∑ –ª–∏—Å—Ç–∞ –æ–∂–∏–¥–∞–Ω–∏—è",
                                    callback_data=f"promote_from_waitlist_{user_id}"
                                )
                            ]
                        ]
                    )

                    await bot.send_message(admin_id, admin_text, reply_markup=waitlist_admin_keyboard)

                except Exception as e:
                    logger.error(
                        f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –∑–∞–ø–∏—Å–∏ –≤ –æ—á–µ—Ä–µ–¥—å: {e}"
                    )

                # –í—ã—Ö–æ–¥–∏–º, —Ç–∞–∫ –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
                await callback.answer()
                await state.clear()
                return

            await callback.message.edit_text(user_message)

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–≤—à–µ–≥–æ—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
            try:
                from database import get_waitlist_by_role

                waitlist_count = len(get_waitlist_by_role("runner"))

                admin_text = (
                    f"üìã <b>–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è (–ö–û–ú–ê–ù–î–ê)</b>\n\n"
                    f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {name} (@{username})\n"
                    f"üë• <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b> {team_name}\n"
                    f"üÜî <b>ID:</b> <code>{user_id}</code>\n"
                    f"‚è∞ <b>–¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è:</b> {target_time}\n"
                    f"üë§ <b>–ü–æ–ª:</b> {'–º—É–∂—Å–∫–æ–π' if gender == 'male' else '–∂–µ–Ω—Å–∫–∏–π'}\n"
                    f"üìä <b>–í—Å–µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥–∏:</b> {waitlist_count}\n"
                    f"üíº <b>–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç:</b> {max_runners}\n"
                )

                waitlist_admin_keyboard = InlineKeyboardMarkup(
                    inline_keyboard=[
                        [
                            InlineKeyboardButton(
                                text="‚úÖ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏–∑ –ª–∏—Å—Ç–∞ –æ–∂–∏–¥–∞–Ω–∏—è",
                                callback_data=f"promote_from_waitlist_{user_id}"
                            )
                        ]
                    ]
                )

                await bot.send_message(admin_id, admin_text, reply_markup=waitlist_admin_keyboard)

            except Exception as e:
                logger.error(
                    f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –∑–∞–ø–∏—Å–∏ –≤ –æ—á–µ—Ä–µ–¥—å: {e}"
                )
        else:
            await callback.message.edit_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
    else:
        # –ï—Å—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã - —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–º–∞–Ω–¥–æ–π
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—â–∏–π—Å—è —É—á–∞—Å—Ç–Ω–∏–∫
        is_team_member = user_data.get("is_team_member", False)
        team_invite_code = user_data.get("team_invite_code")

        if not is_team_member:
            # –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
            import secrets
            team_invite_code = secrets.token_urlsafe(12)
        else:
            # –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—â–∏–π—Å—è —É—á–∞—Å—Ç–Ω–∏–∫ - –∫–æ–¥ –Ω–µ –Ω—É–∂–µ–Ω
            team_invite_code = None

        # –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π "–ö–æ–º–∞–Ω–¥–∞", –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ –∫–æ–¥–æ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        from database import add_participant_with_team

        success = add_participant_with_team(
            user_id, username, name, target_time, role, gender, team_name, team_invite_code
        )

        if success:
            # –£–¥–∞–ª—è–µ–º –∏–∑ pending_registrations
            delete_pending_registration(user_id)

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            gender_display = "–º—É–∂—Å–∫–æ–π" if gender == "male" else "–∂–µ–Ω—Å–∫–∏–π"

            if is_team_member:
                # –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–≤—à–∏–π—Å—è —É—á–∞—Å—Ç–Ω–∏–∫
                success_message = (
                    f"‚úÖ <b>–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∫–æ–º–∞–Ω–¥–µ!</b>\n\n"
                    f"üìù <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n"
                    f"‚Ä¢ –ò–º—è: {name}\n"
                    f"‚Ä¢ –¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è: {target_time}\n"
                    f"‚Ä¢ –ü–æ–ª: {gender_display}\n"
                    f"‚Ä¢ –†–æ–ª—å: –±–µ–≥—É–Ω\n"
                    f"‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: üë• –ö–æ–º–∞–Ω–¥–∞\n"
                    f"‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: {team_name}\n\n"
                    f"üí∞ <b>–í–∞–∂–Ω–æ:</b> –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É —É—á–∞—Å—Ç–∏—è {get_participation_fee_text()}!\n"
                    f"üì± –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã."
                )
                await callback.message.edit_text(success_message)
            else:
                # –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
                bot_username = (await bot.get_me()).username
                invite_link = f"https://t.me/{bot_username}?start=team_{team_invite_code}"

                success_message = (
                    f"‚úÖ <b>–ö–æ–º–∞–Ω–¥–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!</b>\n\n"
                    f"üìù <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n"
                    f"‚Ä¢ –ò–º—è: {name}\n"
                    f"‚Ä¢ –¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è: {target_time}\n"
                    f"‚Ä¢ –ü–æ–ª: {gender_display}\n"
                    f"‚Ä¢ –†–æ–ª—å: –±–µ–≥—É–Ω\n"
                    f"‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: üë• –ö–æ–º–∞–Ω–¥–∞\n"
                    f"‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: {team_name}\n\n"
                    f"üí∞ <b>–í–∞–∂–Ω–æ:</b> –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É —É—á–∞—Å—Ç–∏—è {get_participation_fee_text()}!\n"
                    f"üì± –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã."
                )

                # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–≥–∞
                invite_keyboard = InlineKeyboardMarkup(
                    inline_keyboard=[
                        [
                            InlineKeyboardButton(
                                text="üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –≤ –∫–æ–º–∞–Ω–¥—É",
                                url=f"https://t.me/share/url?url={invite_link}&text=–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ '{team_name}' –Ω–∞ –∑–∞–±–µ–≥–µ!"
                            )
                        ]
                    ]
                )

                await callback.message.edit_text(success_message, reply_markup=invite_keyboard)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–æ–Ω—Å–æ—Ä–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å
            try:
                sponsor_image_path = config.get(
                    "sponsor_image_path", "/app/images/sponsor_image.jpeg"
                )
                if os.path.exists(sponsor_image_path):
                    await bot.send_photo(
                        chat_id=user_id,
                        photo=FSInputFile(path=sponsor_image_path),
                        caption="ü§ù –ù–∞—à–∏ —Å–ø–æ–Ω—Å–æ—Ä—ã",
                    )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–æ–Ω—Å–æ—Ä–æ–≤: {e}")

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            try:
                admin_message = (
                    f"üÜï <b>–ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã!</b>\n\n"
                    f"üë§ <b>–£—á–∞—Å—Ç–Ω–∏–∫:</b> {name}\n"
                    f"üë• <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b> {team_name}\n"
                    f"‚è∞ <b>–¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è:</b> {target_time}\n"
                    f"üë§ <b>–ü–æ–ª:</b> {gender_display}\n"
                    f"üÜî <b>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> <code>{user_id}</code>\n"
                    f"üì± <b>Username:</b> @{username}\n\n"
                    f"üé≠ <b>–†–æ–ª—å:</b> –±–µ–≥—É–Ω\n"
                    f"üìÇ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> üë• –ö–æ–º–∞–Ω–¥–∞ (–∞–≤—Ç–æ)\n"
                    f"üí∞ <b>–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã:</b> –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è\n"
                    f"üìä <b>–í—Å–µ–≥–æ –±–µ–≥—É–Ω–æ–≤:</b> {current_runners + 1}/{max_runners}\n"
                    f"üîó <b>–ö–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:</b> <code>{team_invite_code}</code>"
                )

                await bot.send_message(admin_id, admin_message)

            except Exception as e:
                logger.error(
                    f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}"
                )
        else:
            await callback.message.edit_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )

    await callback.answer()
    await state.clear()


def register_simple_registration_handlers(dp: Dispatcher, bot: Bot, admin_id: int):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–ø—Ä–æ—â—ë–Ω–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""

    # –ö–æ–º–∞–Ω–¥–∞ /start
    async def start_wrapper(message: Message, state: FSMContext):
        await handle_start_command(message, state, bot, admin_id)

    dp.message.register(start_wrapper, CommandStart())

    # –ù–∞—á–∞–ª–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    dp.callback_query.register(
        handle_start_registration, F.data == "start_registration"
    )

    # –ù–∞—á–∞–ª–æ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    dp.callback_query.register(
        handle_start_team_registration, F.data == "start_team_registration"
    )

    # –í–≤–æ–¥ –∏–º–µ–Ω–∏
    dp.message.register(
        handle_name_input, StateFilter(RegistrationForm.waiting_for_name)
    )

    # –í–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏
    dp.message.register(
        handle_time_input, StateFilter(RegistrationForm.waiting_for_target_time)
    )

    # –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    dp.message.register(
        handle_team_name_input, StateFilter(RegistrationForm.waiting_for_team_name)
    )

    # –í—ã–±–æ—Ä –ø–æ–ª–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    async def gender_wrapper(callback: CallbackQuery, state: FSMContext):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –∫–æ–º–∞–Ω–¥–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–ª–∏ –æ–±—ã—á–Ω–∞—è
        user_data = await state.get_data()
        is_team_registration = user_data.get("is_team_registration", False)

        if is_team_registration:
            await handle_team_gender_selection(callback, state, bot, admin_id)
        else:
            await handle_gender_selection(callback, state, bot, admin_id)

    dp.callback_query.register(
        gender_wrapper, StateFilter(RegistrationForm.waiting_for_gender)
    )

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    async def handle_user_main_menu(callback: CallbackQuery, state: FSMContext):
        """Handle main menu button for regular users - same as /start"""
        # Clear state first
        await state.clear()

        # If it's admin, redirect to admin panel
        if callback.from_user.id == admin_id:
            from .utils import create_admin_commands_keyboard

            await callback.message.edit_text(
                "üîß <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                reply_markup=create_admin_commands_keyboard(),
            )
            await callback.answer()
            return

        user_id = callback.from_user.id

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        reg_end_date = get_setting("reg_end_date")
        if reg_end_date:
            try:
                from datetime import datetime
                from pytz import timezone
                end_date = datetime.strptime(reg_end_date, "%H:%M %d.%m.%Y")
                moscow_tz = timezone("Europe/Moscow")
                end_date = moscow_tz.localize(end_date)
                current_time = datetime.now(moscow_tz)
                if current_time > end_date:
                    await callback.message.edit_text(messages["registration_closed"])
                    await callback.answer()
                    return
            except ValueError:
                logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç reg_end_date: {reg_end_date}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        from .archive_handlers import handle_historical_participant

        # –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∏—Å—Ç–æ—Ä–∏—é
        if not is_current_event_active():
            # –î–ª—è callback –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ñ–µ–π–∫–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            historical_handled = await handle_historical_participant(user_id, callback.message)
            if historical_handled:
                await callback.answer()
                return
        else:
            # –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ç–µ–∫—É—â–∏–π —É—á–∞—Å—Ç–Ω–∏–∫,
            # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            participant = get_participant_by_user_id(user_id)
            if not participant and not is_user_in_waitlist(user_id):
                historical_handled = await handle_historical_participant(user_id, callback.message)
                if historical_handled:
                    await callback.answer()
                    return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        participant = get_participant_by_user_id(user_id)
        if participant:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            name = participant[2]
            target_time = participant[3] or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
            role = "–±–µ–≥—É–Ω" if participant[4] == "runner" else "–≤–æ–ª–æ–Ω—Ç—ë—Ä"
            bib_number = f"‚Ññ {participant[7]}" if participant[7] else "–Ω–µ –ø—Ä–∏—Å–≤–æ–µ–Ω"
            payment_status = participant[6]
            gender = (
                "–º—É–∂—Å–∫–æ–π"
                if participant[9] == "male"
                else "–∂–µ–Ω—Å–∫–∏–π" if participant[9] == "female" else "–Ω–µ —É–∫–∞–∑–∞–Ω"
            )
            # –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å —ç–º–æ–¥–∑–∏
            if participant[10]:
                category_emoji = {
                    "–°—É–ø–µ—Ä–≠–ª–∏—Ç–∞": "üíé",
                    "–≠–ª–∏—Ç–∞": "ü•á",
                    "–ö–ª–∞—Å—Å–∏–∫–∞": "üèÉ",
                    "–ñ–µ–Ω—Å–∫–∏–π": "üë©",
                    "–ö–æ–º–∞–Ω–¥–∞": "üë•",
                }.get(participant[10], "üìÇ")
                category = f"{category_emoji} {participant[10]}"
            else:
                category = "üìÇ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞"

            # –ö–ª–∞—Å—Ç–µ—Ä —Å —ç–º–æ–¥–∑–∏
            if participant[11]:
                cluster_emoji = {
                    "A": "üÖ∞Ô∏è",
                    "B": "üÖ±Ô∏è",
                    "C": "üÖ≤",
                    "D": "üÖ≥",
                    "E": "üÖ¥",
                    "F": "üÖµ",
                    "G": "üÖ∂",
                }.get(participant[11], "üéØ")
                cluster = f"{cluster_emoji} {participant[11]}"
            else:
                cluster = "üéØ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω"

            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ
            team_name = participant[12]
            team_invite_code = participant[13]

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã
            payment_emoji = "‚úÖ" if payment_status == "paid" else "‚è≥"
            payment_text = (
                "–æ–ø–ª–∞—á–µ–Ω–æ" if payment_status == "paid" else "–æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
            )

            # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            participant_info = (
                f"‚úÖ <b>–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!</b>\n\n"
                f"üìù <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n"
                f"‚Ä¢ –ò–º—è: {name}\n"
                f"‚Ä¢ –¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è: {target_time}\n"
                f"‚Ä¢ –ü–æ–ª: {gender}\n"
                f"‚Ä¢ –ë–µ–≥–æ–≤–æ–π –Ω–æ–º–µ—Ä: {bib_number}\n"
                f"‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n"
                f"‚Ä¢ –ö–ª–∞—Å—Ç–µ—Ä: {cluster}\n\n"
                f"üí∞ <b>–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã:</b> {payment_emoji} {payment_text}\n\n"
            )

            if payment_status != "paid":
                participant_info += f"üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É —É—á–∞—Å—Ç–∏—è {get_participation_fee_text()}!"
            else:
                participant_info += "üéâ –í—Å–µ –≥–æ—Ç–æ–≤–æ –∫ —Å—Ç–∞—Ä—Ç—É! –£–≤–∏–¥–∏–º—Å—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏!"

            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü–µ—Ä–µ–æ—Ñ–æ—Ä–º–∏—Ç—å —Å–ª–æ—Ç" –∏ "–û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ"
            keyboard_buttons = [
                [
                    InlineKeyboardButton(
                        text="üîÑ –ü–µ—Ä–µ–æ—Ñ–æ—Ä–º–∏—Ç—å —Å–ª–æ—Ç", callback_data="slot_transfer"
                    )
                ]
            ]

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞"
            if participant[10] == "–ö–æ–º–∞–Ω–¥–∞" and team_invite_code:
                from database import count_team_members

                team_members_count = count_team_members(team_name)

                if team_members_count < 2:
                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    participant_info = (
                        f"‚úÖ <b>–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!</b>\n\n"
                        f"üìù <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n"
                        f"‚Ä¢ –ò–º—è: {name}\n"
                        f"‚Ä¢ –¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è: {target_time}\n"
                        f"‚Ä¢ –ü–æ–ª: {gender}\n"
                        f"‚Ä¢ –ë–µ–≥–æ–≤–æ–π –Ω–æ–º–µ—Ä: {bib_number}\n"
                        f"‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n"
                        f"‚Ä¢ –ö–æ–º–∞–Ω–¥–∞: {team_name}\n"
                        f"‚Ä¢ –ö–ª–∞—Å—Ç–µ—Ä: {cluster}\n\n"
                        f"üí∞ <b>–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã:</b> {payment_emoji} {payment_text}\n\n"
                    )

                    if payment_status != "paid":
                        participant_info += f"üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É —É—á–∞—Å—Ç–∏—è {get_participation_fee_text()}!\n\n"
                    else:
                        participant_info += "üéâ –í—Å–µ –≥–æ—Ç–æ–≤–æ –∫ —Å—Ç–∞—Ä—Ç—É! –£–≤–∏–¥–∏–º—Å—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏!\n\n"

                    participant_info += "üë• <b>–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –≤ –∫–æ–º–∞–Ω–¥—É!</b>"

                    # –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
                    bot_username = (await bot.get_me()).username
                    invite_link = f"https://t.me/{bot_username}?start=team_{team_invite_code}"

                    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞" –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π "–ü–µ—Ä–µ–æ—Ñ–æ—Ä–º–∏—Ç—å —Å–ª–æ—Ç"
                    keyboard_buttons.insert(0, [
                        InlineKeyboardButton(
                            text="üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞",
                            url=f"https://t.me/share/url?url={invite_link}&text=–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ '{team_name}' –Ω–∞ –∑–∞–±–µ–≥–µ!"
                        )
                    ])

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ" –≤ –∫–æ–Ω–µ—Ü
            keyboard_buttons.append([
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ", callback_data="cancel_participation"
                )
            ])

            participant_keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)

            await callback.message.edit_text(participant_info, reply_markup=participant_keyboard)
            await callback.answer()
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è
        if is_user_in_waitlist(user_id):
            waitlist_entry = get_waitlist_by_user_id(user_id)

            if waitlist_entry:
                position, total_waiting = get_waitlist_position(user_id)
                name = waitlist_entry[3]  # name at index 3
                role = waitlist_entry[5]  # role at index 5
                role_display = "–±–µ–≥—É–Ω–∞" if role == "runner" else "–≤–æ–ª–æ–Ω—Ç—ë—Ä–∞"
                status = waitlist_entry[8]  # status at index 8
                team_name = waitlist_entry[11]  # team_name at index 11
                team_invite_code = waitlist_entry[12]  # team_invite_code at index 12

                # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏ –æ—Ç–º–µ–Ω—ã —É—á–∞—Å—Ç–∏—è
                waitlist_keyboard_buttons = []

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞" –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –≤ –æ—á–µ—Ä–µ–¥–∏
                if team_name and team_invite_code:
                    from database import count_team_members

                    team_members_count = count_team_members(team_name)

                    if team_members_count < 2:
                        # –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã –≤ –æ—á–µ—Ä–µ–¥–∏ - –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
                        bot_username = (await bot.get_me()).username
                        invite_link = f"https://t.me/{bot_username}?start=team_{team_invite_code}"

                        waitlist_keyboard_buttons.append([
                            InlineKeyboardButton(
                                text="üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞",
                                url=f"https://t.me/share/url?url={invite_link}&text=–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ '{team_name}' –Ω–∞ –∑–∞–±–µ–≥–µ!"
                            )
                        ])

                waitlist_keyboard_buttons.extend([
                    [
                        InlineKeyboardButton(
                            text="üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å",
                            callback_data="check_waitlist_status",
                        )
                    ],
                    [
                        InlineKeyboardButton(
                            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ",
                            callback_data="cancel_participation",
                        )
                    ],
                ])

                waitlist_keyboard = InlineKeyboardMarkup(inline_keyboard=waitlist_keyboard_buttons)

                if status == "notified":
                    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω –æ –¥–æ—Å—Ç—É–ø–Ω–æ–º –º–µ—Å—Ç–µ
                    message_text = (
                        f"üéâ <b>{name}, –¥–ª—è –≤–∞—Å –æ—Å–≤–æ–±–æ–¥–∏–ª–æ—Å—å –º–µ—Å—Ç–æ!</b>\n\n"
                        f"üìã –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞ —Ä–æ–ª—å {role_display}.\n"
                        f"üì¨ –í–∞–º –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —É—á–∞—Å—Ç–∏—è.\n\n"
                        f"‚è∞ <b>–í–∞–∂–Ω–æ:</b> –£ –≤–∞—Å –µ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!\n\n"
                        f"üí° –ù–∞–π–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
                    )
                else:
                    # –û–±—ã—á–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ
                    message_text = (
                        f"üìã <b>{name}, –≤—ã –≤ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è!</b>\n\n"
                        f"üî¢ <b>–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è:</b> {position} –∏–∑ {total_waiting}\n"
                        f"üë• <b>–†–æ–ª—å:</b> {role_display}\n\n"
                        f"‚è≥ <b>–û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–≤–æ–±–æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.</b>\n"
                        f"–ú—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–æ–±—â–∏–º –≤–∞–º, –∫–æ–≥–¥–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—Å—è –º–µ—Å—Ç–æ!\n\n"
                        f"üì± –°–ª–µ–¥–∏—Ç–µ –∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
                    )

                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–æ–º–∞–Ω–¥–µ
                    if team_name:
                        message_text = (
                            f"üìã <b>{name}, –≤—ã –≤ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è!</b>\n\n"
                            f"üî¢ <b>–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è:</b> {position} –∏–∑ {total_waiting}\n"
                            f"üë• <b>–†–æ–ª—å:</b> {role_display}\n"
                            f"üë• <b>–ö–æ–º–∞–Ω–¥–∞:</b> {team_name}\n\n"
                            f"‚è≥ <b>–û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–≤–æ–±–æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.</b>\n"
                            f"–ú—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–æ–±—â–∏–º –≤–∞–º, –∫–æ–≥–¥–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—Å—è –º–µ—Å—Ç–æ!\n\n"
                            f"üì± –°–ª–µ–¥–∏—Ç–µ –∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
                        )

                        if team_invite_code and team_members_count < 2:
                            message_text += "\n\nüë• <b>–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –≤ –∫–æ–º–∞–Ω–¥—É!</b>"

                await callback.message.edit_text(message_text, reply_markup=waitlist_keyboard)
                await callback.answer()
                return

        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ pending_registrations
        username = callback.from_user.username or "–Ω–µ —É–∫–∞–∑–∞–Ω"
        success = add_pending_registration(user_id, username)

        if not success:
            await callback.message.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            await callback.answer()
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        start_message = messages["start_message"].format(
            fee=get_participation_fee_text(),
            event_date=get_event_date_text(),
            event_time=get_event_time_text(),
            event_location=get_event_location_text(),
        )

        await callback.message.edit_text(
            start_message, reply_markup=create_start_registration_keyboard()
        )
        await callback.answer()

    dp.callback_query.register(handle_user_main_menu, F.data == "main_menu")

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Ç–º–µ–Ω—ã —É—á–∞—Å—Ç–∏—è
    async def cancel_participation_wrapper(callback: CallbackQuery):
        await handle_cancel_participation_request(callback, bot, admin_id)

    dp.callback_query.register(
        cancel_participation_wrapper, F.data == "cancel_participation"
    )

    async def confirm_cancel_wrapper(callback: CallbackQuery):
        await handle_confirm_cancel_participation(callback, bot, admin_id)

    dp.callback_query.register(
        confirm_cancel_wrapper, F.data == "confirm_cancel_participation"
    )

    dp.callback_query.register(
        handle_decline_cancel_participation, F.data == "decline_cancel_participation"
    )

    logger.info("–£–ø—Ä–æ—â—ë–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
