"""
–ö–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
"""

import typer
from rich.table import Table
from rich.console import Console

from cli_admin.database import (
    get_participant_count,
    get_participant_count_by_role,
    get_waitlist_by_role,
    get_all_teams,
    count_complete_teams,
    get_all_participants,
    get_setting,
)

app = typer.Typer(help="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
console = Console()


@app.command("overview")
def overview():
    """
    üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    """
    try:
        # –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
        total_participants = get_participant_count()
        runners = get_participant_count_by_role("runner")
        volunteers = get_participant_count_by_role("volunteer")
        waitlist = len(get_waitlist_by_role())
        teams = len(get_all_teams())
        complete_teams = count_complete_teams()

        # –ü–æ–ª—É—á–∏—Ç—å –ª–∏–º–∏—Ç—ã
        max_runners = get_setting("max_runners") or 100
        max_volunteers = get_setting("max_volunteers") or 20

        # –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö
        all_p = get_all_participants()
        paid_count = sum(1 for p in all_p if p[6] == 'paid')

        # –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É
        table = Table(title="üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", show_lines=True)
        table.add_column("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", style="cyan")
        table.add_column("–ó–Ω–∞—á–µ–Ω–∏–µ", style="green", justify="right")

        # –£—á–∞—Å—Ç–Ω–∏–∫–∏
        table.add_row("–í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", str(total_participants))
        table.add_row("–ë–µ–≥—É–Ω–æ–≤", f"{runners} / {max_runners}")
        table.add_row("–í–æ–ª–æ–Ω—Ç–µ—Ä–æ–≤", f"{volunteers} / {max_volunteers}")

        # –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
        runners_percent = (runners / int(max_runners)) * 100 if max_runners else 0
        volunteers_percent = (volunteers / int(max_volunteers)) * 100 if max_volunteers else 0
        table.add_row("–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ (–±–µ–≥—É–Ω—ã)", f"{runners_percent:.1f}%")
        table.add_row("–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ (–≤–æ–ª–æ–Ω—Ç–µ—Ä—ã)", f"{volunteers_percent:.1f}%")

        # –û–ø–ª–∞—Ç–∞
        payment_percent = (paid_count / total_participants) * 100 if total_participants else 0
        table.add_row("–û–ø–ª–∞—Ç–∏–ª–∏", f"{paid_count} / {total_participants}")
        table.add_row("–ü—Ä–æ—Ü–µ–Ω—Ç –æ–ø–ª–∞—Ç—ã", f"{payment_percent:.1f}%")

        # –õ–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è
        table.add_row("–í –ª–∏—Å—Ç–µ –æ–∂–∏–¥–∞–Ω–∏—è", str(waitlist))

        # –ö–æ–º–∞–Ω–¥—ã
        table.add_row("–í—Å–µ–≥–æ –∫–æ–º–∞–Ω–¥", str(teams))
        table.add_row("–ü–æ–ª–Ω—ã—Ö –∫–æ–º–∞–Ω–¥", f"{complete_teams} / {teams}")

        console.print(table)

    except Exception as e:
        console.print(f"[red]–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {str(e)}[/red]")
        raise typer.Exit(1)


@app.command("payment")
def payment_stats():
    """
    üí∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø–ª–∞—Ç
    """
    try:
        all_p = get_all_participants()

        if not all_p:
            console.print("[yellow]–ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤[/yellow]")
            return

        # –ü–æ–¥—Å—á–µ—Ç –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        paid = sum(1 for p in all_p if p[6] == 'paid')
        pending = sum(1 for p in all_p if p[6] == 'pending')
        unpaid = sum(1 for p in all_p if p[6] == 'unpaid')

        # –ü–æ–¥—Å—á–µ—Ç –ø–æ —Ä–æ–ª—è–º
        paid_runners = sum(1 for p in all_p if p[6] == 'paid' and p[4] == 'runner')
        paid_volunteers = sum(1 for p in all_p if p[6] == 'paid' and p[4] == 'volunteer')

        table = Table(title="üí∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø–ª–∞—Ç", show_lines=True)
        table.add_column("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", style="cyan")
        table.add_column("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", style="green", justify="right")
        table.add_column("–ü—Ä–æ—Ü–µ–Ω—Ç", style="yellow", justify="right")

        total = len(all_p)

        table.add_row("–û–ø–ª–∞—á–µ–Ω–æ", str(paid), f"{(paid/total*100):.1f}%")
        table.add_row("–û–∂–∏–¥–∞–µ—Ç", str(pending), f"{(pending/total*100):.1f}%")
        table.add_row("–ù–µ –æ–ø–ª–∞—á–µ–Ω–æ", str(unpaid), f"{(unpaid/total*100):.1f}%")
        table.add_row("", "", "")  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        table.add_row("–û–ø–ª–∞—Ç–∏–ª–∏ (–±–µ–≥—É–Ω—ã)", str(paid_runners), "")
        table.add_row("–û–ø–ª–∞—Ç–∏–ª–∏ (–≤–æ–ª–æ–Ω—Ç–µ—Ä—ã)", str(paid_volunteers), "")

        console.print(table)

        # –ü–æ–¥—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
        participation_price = get_setting("participation_price")
        if participation_price:
            try:
                price = float(participation_price)
                total_expected = total * price
                total_received = paid * price
                console.print(f"\n[cyan]–û–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥: {total_expected:.2f} —Ä—É–±[/cyan]")
                console.print(f"[green]–ü–æ–ª—É—á–µ–Ω–æ: {total_received:.2f} —Ä—É–±[/green]")
                console.print(f"[yellow]–û—Å—Ç–∞–µ—Ç—Å—è —Å–æ–±—Ä–∞—Ç—å: {total_expected - total_received:.2f} —Ä—É–±[/yellow]")
            except ValueError:
                pass

    except Exception as e:
        console.print(f"[red]–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ–ø–ª–∞—Ç: {str(e)}[/red]")
        raise typer.Exit(1)


@app.command("teams")
def teams_stats():
    """
    üèÜ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–º–∞–Ω–¥
    """
    try:
        teams = get_all_teams()

        if not teams:
            console.print("[yellow]–ù–µ—Ç –∫–æ–º–∞–Ω–¥[/yellow]")
            return

        complete = count_complete_teams()
        incomplete = len(teams) - complete

        table = Table(title="üèÜ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–º–∞–Ω–¥", show_lines=True)
        table.add_column("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", style="cyan")
        table.add_column("–ó–Ω–∞—á–µ–Ω–∏–µ", style="green", justify="right")

        table.add_row("–í—Å–µ–≥–æ –∫–æ–º–∞–Ω–¥", str(len(teams)))
        table.add_row("–ü–æ–ª–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (2/2)", str(complete))
        table.add_row("–ù–µ–ø–æ–ª–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (1/2)", str(incomplete))

        if len(teams) > 0:
            table.add_row("–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ª–Ω—ã—Ö –∫–æ–º–∞–Ω–¥", f"{(complete/len(teams)*100):.1f}%")

        console.print(table)

    except Exception as e:
        console.print(f"[red]–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–º–∞–Ω–¥: {str(e)}[/red]")
        raise typer.Exit(1)
